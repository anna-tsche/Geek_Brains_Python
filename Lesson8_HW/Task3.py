# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class NonNumberInListError(Exception):
    error_message = "Вы ввели не число."

    def __str__(self):
        return self.error_message


def create_numbers_list():
    stop_command = "stop"
    created_list = []
    user_input = ""
    while user_input != stop_command:
        try:
            user_input = input("Введите число для добавления в список или слово stop для завершения ввода >>> ")
            if not user_input.isdigit():
                raise NonNumberInListError
            else:
                created_list.append(int(user_input))
        except NonNumberInListError as non_number:
            print(non_number)

    print(created_list)


create_numbers_list()
